{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\OneDrive\\\\Desktop\\\\chat final\\\\src\\\\components\\\\ChatBox.js\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\nimport ChatLists from './ChatLists';\nexport default class ChatBox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.scrollDown = () => {\n      const {\n        chat_container\n      } = this.refs;\n      chat_container.scrollTop = chat_container.scrollHeight;\n    };\n  }\n\n  componentDidMount() {\n    this.scrollDown();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.scrollDown();\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      handleChange,\n      currentChannel,\n      channelConversations,\n      id,\n      getUsersConversations,\n      hasToken,\n      socketConversations,\n      composedMessage,\n      username,\n      guestUsername\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"chatapp__mainchat--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, id ? React.createElement(ChatLists, Object.assign({\n      getUsersConversation: getUsersConversations,\n      hasToken: hasToken\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"chatapp__chatbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Channel: \", currentChannel), React.createElement(\"div\", {\n      className: \"chatapp__chatbox--messages\",\n      ref: \"chat_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, channelConversations ? React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, channelConversations.map((message, index) => {\n      return React.createElement(\"li\", {\n        className: username !== message.author[0].item.username || message.author[0].item.guestName ? guestUsername === message.author[0].item.guestName ? \"\" : \"chat--received\" : null,\n        key: `chatMsgId-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"speech--bubble--author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, username === message.author[0].item.username ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"You\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, message.author[0].item.username || message.author[0].item.guestName), React.createElement(\"p\", {\n        className: \"speech--bubble--date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, Moment(message.createdAt).fromNow())), React.createElement(\"div\", {\n        className: \"speech--bubble\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, message.body)));\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Nothing has been posted in this channel yet.\"), socketConversations ? React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, socketConversations.map((message, index) => {\n      return React.createElement(\"li\", {\n        className: !message.author ? \"user--joined\" : username !== message.author ? guestUsername ? \"\" : \"chat--received\" : null,\n        key: `socketMsgId-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, username !== message.userJoined ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, message.userJoined) : null, React.createElement(\"div\", {\n        className: \"speech--bubble--author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, username === message.author ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"You\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, message.author), React.createElement(\"p\", {\n        className: \"speech--bubble--date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, Moment(message.date).fromNow())), !message.userJoined ? React.createElement(\"div\", {\n        className: \"speech--bubble\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, message.composedMessage)) : null);\n    })) : null), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: handleChange,\n      value: composedMessage,\n      name: \"composedMessage\",\n      placeholder: \"Type a message here\",\n      type: \"text\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/chris/OneDrive/Desktop/chat final/src/components/ChatBox.js"],"names":["React","Component","Moment","ChatLists","ChatBox","scrollDown","chat_container","refs","scrollTop","scrollHeight","componentDidMount","componentDidUpdate","prevProps","prevState","render","handleSubmit","handleChange","currentChannel","channelConversations","id","getUsersConversations","hasToken","socketConversations","composedMessage","username","guestUsername","props","map","message","index","author","item","guestName","createdAt","fromNow","body","userJoined","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\nimport ChatLists from './ChatLists';\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n\r\n  scrollDown = () => {\r\n    const { chat_container } = this.refs;\r\n    chat_container.scrollTop = chat_container.scrollHeight;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollDown();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.scrollDown();  \r\n  }\r\n\r\n  render() {  \r\n    const { handleSubmit, handleChange, currentChannel, channelConversations, id, getUsersConversations, hasToken, socketConversations, composedMessage, username, guestUsername } = this.props;\r\n  \r\n    return (\r\n        <div className=\"chatapp__mainchat--container\">\r\n          {\r\n            (id)\r\n            ? <ChatLists \r\n                getUsersConversation={getUsersConversations}\r\n                hasToken={hasToken}\r\n                {...this.props}\r\n                />\r\n              : null\r\n          }\r\n          <div className=\"chatapp__chatbox\">\r\n            <h3>Channel: {currentChannel}</h3>\r\n            <div className=\"chatapp__chatbox--messages\" ref=\"chat_container\">\r\n            {\r\n                (channelConversations)\r\n                  ? <ul>\r\n                      {channelConversations.map((message, index) => {\r\n                        return (\r\n                          <li className={(username !== message.author[0].item.username || message.author[0].item.guestName) ? (guestUsername === message.author[0].item.guestName) ? \"\" : \"chat--received\" : null} key={`chatMsgId-${index}`}>\r\n                            <div className=\"speech--bubble--author\">\r\n                              {\r\n                                (username === message.author[0].item.username )\r\n                                  ? <p>You</p>\r\n                                  : <p>{message.author[0].item.username || message.author[0].item.guestName}</p>\r\n                              }\r\n                              <p className=\"speech--bubble--date\">{Moment(message.createdAt).fromNow()}</p>\r\n                            </div>\r\n                            <div className=\"speech--bubble\">\r\n                              <p>{message.body}</p>\r\n                            </div>\r\n                          </li>\r\n                        )\r\n                      })}\r\n                    </ul>\r\n                  : <p>Nothing has been posted in this channel yet.</p>\r\n              }\r\n              {\r\n                (socketConversations)\r\n                  ? <ul>\r\n                      {socketConversations.map((message, index) => {\r\n                        return (\r\n                          <li className={(!message.author) ? \"user--joined\" : (username !== message.author) ? (guestUsername) ? \"\" : \"chat--received\" : null}key={`socketMsgId-${index}`}>\r\n                              {\r\n                                (username !== message.userJoined)\r\n                                  ? <p>{message.userJoined}</p>\r\n                                  : null\r\n                              }\r\n                            <div className=\"speech--bubble--author\">\r\n                              {\r\n                                (username === message.author)\r\n                                  ? <p>You</p>\r\n                                  : <p>{message.author}</p>\r\n                              }\r\n                              <p className=\"speech--bubble--date\">{Moment(message.date).fromNow()}</p>\r\n                            </div>\r\n                            {\r\n                              (!message.userJoined)\r\n                                ? <div className=\"speech--bubble\">\r\n                                    <p>{message.composedMessage}</p>\r\n                                  </div>\r\n                                : null\r\n                            }\r\n                          </li>\r\n                          \r\n                        )\r\n                      })}\r\n                    </ul>\r\n                  : null\r\n              }\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input onChange={handleChange} value={composedMessage} name=\"composedMessage\" placeholder=\"Type a message here\" type=\"text\" autoComplete=\"off\"/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}